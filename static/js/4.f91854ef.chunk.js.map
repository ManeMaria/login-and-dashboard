{"version":3,"sources":["assets/icons/leaf.png","assets/images/element-bottom-right.svg","assets/images/element-top-left.svg","components/input/Input.tsx","components/TextComponent/TextComponent.tsx","components/Form/Form.tsx","Pages/Login.tsx","routes/PublicRoutes.tsx"],"names":["Input","label","resProps","colorMode","useColorMode","input","useRef","labelRef","useEffect","elementeInput","current","elementeLabel","style","cssText","colorHandle","className","ref","placeholder","TextComponent","colorDefalt","colorDark","children","color","useColorModeValue","fontSize","Form","restProps","toggleColorMode","textAlign","margin","spacingY","required","type","padding","spacing","defaultChecked","size","textDecoration","href","justifyContent","w","borderRadius","bg","spinner","onClick","Login","h","flex","alignItems","d","src","elementTopLeft","alt","flexDirection","gap","logo2","elementBottomRight","PublicRoutes","index","element","path","to"],"mappings":"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","file":"static/js/4.f91854ef.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/leaf.4360d01d.png\";","export default __webpack_public_path__ + \"static/media/element-bottom-right.28e2aaac.svg\";","export default __webpack_public_path__ + \"static/media/element-top-left.0022f093.svg\";","import { useColorMode } from '@chakra-ui/react';\nimport React, { useEffect, useRef } from 'react';\n\nimport { IDynamicProps } from '@/types/dynamicProps';\n\nimport './imputs_ntd-grid.css';\n\ninterface IInput extends IDynamicProps {\n  label: string;\n}\nexport function Input({ label, ...resProps }: IInput) {\n  const { colorMode } = useColorMode();\n  const input = useRef<HTMLInputElement | null>(null);\n  const labelRef = useRef<HTMLLabelElement | null>(null);\n\n  useEffect((): void => {\n    colorHandle();\n  }, [colorMode]);\n\n  function colorHandle(): void {\n    const elementeInput = input.current;\n    const elementeLabel = labelRef.current;\n    elementeInput!.style.cssText =\n      colorMode === 'dark'\n        ? 'color: var(--white); background: #1a202c; border-color: var(--green'\n        : 'color: var(--green)';\n\n    elementeLabel!.style.cssText =\n      colorMode === 'dark'\n        ? 'color: var(--white); background: #1a202c; border-color: var(--green'\n        : 'color: var(--green)';\n  }\n\n  return (\n    <div className={`label-float div-float inputlabel`}>\n      <input ref={input} className={`inputntd_`} placeholder=\" \" {...resProps} />\n      <label ref={labelRef}>{label}</label>\n    </div>\n  );\n}\n","import { Text, useColorModeValue } from '@chakra-ui/react';\n\nimport { IChildrenReact } from '@/types/IChildrenReact';\n\ninterface ITextComponent extends IChildrenReact {\n  colorDefalt?: string;\n  colorDark?: string;\n}\nexport function TextComponent({\n  colorDefalt = 'gray.200',\n  colorDark = 'white',\n  children,\n}: ITextComponent) {\n  const color = useColorModeValue(colorDefalt, colorDark);\n\n  return (\n    <Text fontSize=\"md\" color={color}>\n      {children}\n    </Text>\n  );\n}\n","import {\n  Box,\n  Button,\n  Checkbox,\n  Flex,\n  FormControl,\n  SimpleGrid,\n  useColorMode,\n} from '@chakra-ui/react';\nimport { BeatLoader } from 'react-spinners';\n\nimport { Input } from '../input/Input';\nimport { TextComponent } from '../TextComponent/TextComponent';\n\nexport function Form({ ...restProps }) {\n  const { colorMode, toggleColorMode } = useColorMode();\n  return (\n    <FormControl {...restProps}>\n      <Box textAlign=\"center\" margin={'2em 0'}>\n        <TextComponent colorDefalt=\"gray.200\" colorDark=\"white\">\n          Olá, faça seu login abaixo!\n        </TextComponent>\n      </Box>\n      <SimpleGrid spacingY=\"1em\">\n        <Input label=\"Usuário\" required />\n        <Input label=\"Senha\" type=\"password\" required />\n      </SimpleGrid>\n      <Box padding=\"0 0 0 15px\" margin=\"1em 0\">\n        <Checkbox spacing=\"0.8rem\" defaultChecked fontSize=\"0.8em\" color=\"gray.200\" size=\"lg\">\n          <TextComponent>Lembrar-me</TextComponent>\n        </Checkbox>\n      </Box>\n      <Box color=\"green\" textAlign=\"center\" margin=\"10px 0 20px 0\">\n        <a style={{ textDecoration: 'underline' }} href=\"/\">\n          <TextComponent>Esqueci a senha</TextComponent>\n        </a>\n      </Box>\n      <Flex justifyContent=\"center\">\n        <Button\n          w=\"90%\"\n          borderRadius=\"22px\"\n          // isLoading={true}\n          bg=\"green\"\n          color=\"white\"\n          spinner={<BeatLoader size={8} color=\"white\" />}\n          onClick={toggleColorMode}\n        >\n          Enviar Toggle {colorMode === 'light' ? 'Dark' : 'Light'}\n        </Button>\n      </Flex>\n    </FormControl>\n  );\n}\n","import { Flex, Image, Box } from '@chakra-ui/react';\n// import { useNavigate } from 'react-router-dom';\n\nimport '@fontsource/source-sans-pro';\nimport logo2 from '@/assets/icons/leaf.png';\nimport elementBottomRight from '@/assets/images/element-bottom-right.svg';\nimport elementTopLeft from '@/assets/images/element-top-left.svg';\nimport { Form } from '@/components/Form/Form';\nexport const Login = () => {\n  // const navigate = useNavigate();\n\n  return (\n    <Flex w=\"100vw\" h=\"100vh\">\n      <Flex\n        flex=\"1\"\n        alignItems=\"flex-start\"\n        justifyContent={'flex-start'}\n        w={'70%'}\n        d={['none', 'flex']}\n      >\n        <Image src={elementTopLeft} alt=\"elemento topo esquerdo\" />\n      </Flex>\n      <Flex justifyContent=\"center\" alignItems=\"center\" flexDirection=\"column\" flex=\"3\" gap=\"10px\">\n        <Box h={['150px', '200px']}>\n          <Image src={logo2} alt=\"logo marca\" w={['130px', '150px']} />\n        </Box>\n\n        <Box w=\"100%\">\n          <Form w={['90%', '100%', '100%', '35%']} margin=\"auto\" />\n        </Box>\n      </Flex>\n      <Flex\n        flex=\"1\"\n        alignItems=\"flex-end\"\n        justifyContent={'flex-end'}\n        w={'70%'}\n        d={['none', 'flex']}\n      >\n        <Image src={elementBottomRight} alt=\"elemento baixo direito\" />\n      </Flex>\n    </Flex>\n  );\n};\n","import { Route, Routes, Navigate } from 'react-router-dom';\n\nimport { Login } from '@/Pages/Login';\n// import { AuthRoutes } from '@/modules/auth';\n// import { Landing } from '@/modules/misc';\n\nexport default function PublicRoutes() {\n  return (\n    <Routes>\n      {/* <Route path=\"/*\" element={<AuthRoutes />} /> */}\n      <Route index element={<Login />} />\n      <Route path=\"*\" element={<Navigate to=\"/\" />} />\n    </Routes>\n  );\n}\n"],"sourceRoot":""}